office codes..........................

joint original*


<?php
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO students (name, surname, email, birthday) VALUES (:name, :surname, :email, :birthday)");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Student added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add student');</script>";
    }
}

// Handle form submission for updating a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE students SET name = :name, surname = :surname, email = :email, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Student updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update student');</script>";
    }
}

?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Class Register</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background: url('maa.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 10px; padding: 8px; width: 100%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        button { padding: 8px 16px; margin-right: 5px; }
    </style>
</head>
<body>

<div class="container">
    <h1>Class Register</h1>
    <form id="student-form" method="POST" action="">
        <input type="text" id="name" name="name" placeholder="Name" required>
        <input type="text" id="surname" name="surname" placeholder="Surname" required>
        <input type="email" id="email" name="email" placeholder="Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="Add Student" class="btn btn-primary">
    </form>

    <table id="students-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display students
            $stmt = $db->query("SELECT * FROM students");
            while ($student = $stmt->fetch(PDO::FETCH_ASSOC)) {
                echo "<tr>";
                echo "<td>" . htmlspecialchars($student['id']) . "</td>";
                echo "<td>" . htmlspecialchars($student['name']) . "</td>";
                echo "<td>" . htmlspecialchars($student['surname']) . "</td>";
                echo "<td>" . htmlspecialchars($student['email']) . "</td>";
                echo "<td>" . htmlspecialchars($student['birthday']) . "</td>";
                echo "<td>
                        <button class='btn btn-info' onclick='displayStudent(" . $student['id'] . ")'>DISPLAY</button>
                        <button class='btn btn-warning' onclick='editStudent(" . $student['id'] . ", \"" . $student['name'] . "\", \"" . $student['surname'] . "\", \"" . $student['email'] . "\", \"" . $student['birthday'] . "\")'>UPDATE</button>
                        <button class='btn btn-danger' onclick='deleteStudent(" . $student['id'] . ")'>DELETE</button>
                      </td>";
                echo "</tr>";
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Name: ${data.name}\nSurname: ${data.surname}\nEmail: ${data.email}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editStudent(id, name, surname, email, birthday) {
        document.getElementById('name').value = name;
        document.getElementById('surname').value = surname;
        document.getElementById('email').value = email;
        document.getElementById('birthday').value = birthday;
        document.getElementById('student-form').action = 'joint.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('student-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('student-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Student';
    }

    function deleteStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'login.php';
    }
</script>

</body>
</html>



...................................................................joint with bootstrap on rows for colour bars...................

<?php 
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO students (name, surname, email, birthday) VALUES (:name, :surname, :email, :birthday)");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Student added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add student');</script>";
    }
}

// Handle form submission for updating a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE students SET name = :name, surname = :surname, email = :email, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Student updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update student');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Class Register</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('maa.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 10px; padding: 8px; width: 100%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }
    </style>
</head>
<body>

<div class="container">
    <h1>Class Register</h1>
    <form id="student-form" method="POST" action="">
        <input type="text" id="name" name="name" placeholder="Name" required>
        <input type="text" id="surname" name="surname" placeholder="Surname" required>
        <input type="email" id="email" name="email" placeholder="Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="Add Student" class="btn btn-primary">
    </form>

    <table id="students-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display students with Bootstrap classes
            $stmt = $db->query("SELECT * FROM students");
            $row_classes = ['table-active', 'table-primary', 'table-secondary', 'table-success', 'table-danger', 'table-warning', 'table-info', 'table-light', 'table-dark'];
            $row_index = 0;

            while ($student = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $row_class = $row_classes[$row_index % count($row_classes)];
                echo "<tr class='{$row_class}'>";
                echo "<td>" . htmlspecialchars($student['id']) . "</td>";
                echo "<td>" . htmlspecialchars($student['name']) . "</td>";
                echo "<td>" . htmlspecialchars($student['surname']) . "</td>";
                echo "<td>" . htmlspecialchars($student['email']) . "</td>";
                echo "<td>" . htmlspecialchars($student['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayStudent(" . $student['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editStudent(" . $student['id'] . ", \"" . $student['name'] . "\", \"" . $student['surname'] . "\", \"" . $student['email'] . "\", \"" . $student['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteStudent(" . $student['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";

                $row_index++;
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Name: ${data.name}\nSurname: ${data.surname}\nEmail: ${data.email}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editStudent(id, name, surname, email, birthday) {
        document.getElementById('name').value = name;
        document.getElementById('surname').value = surname;
        document.getElementById('email').value = email;
        document.getElementById('birthday').value = birthday;
        document.getElementById('student-form').action = 'joint.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('student-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('student-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Student';
    }

    function deleteStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'login.php';
    }
</script>

</body>
</html>
........................................all buttons working..............




<?php 
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO students (name, surname, email, birthday) VALUES (:name, :surname, :email, :birthday)");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Student added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add student');</script>";
    }
}

// Handle form submission for updating a student
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $name = $_POST["name"];
    $surname = $_POST["surname"];
    $email = $_POST["email"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE students SET name = :name, surname = :surname, email = :email, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':name', $name);
    $stmt->bindParam(':surname', $surname);
    $stmt->bindParam(':email', $email);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Student updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update student');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Class Register</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('maa.jpg') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 10px; padding: 8px; width: 100%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }
    </style>
</head>
<body>

<div class="container">
    <h1>Class Register</h1>
    <form id="student-form" method="POST" action="">
        <input type="text" id="name" name="name" placeholder="Name" required>
        <input type="text" id="surname" name="surname" placeholder="Surname" required>
        <input type="email" id="email" name="email" placeholder="Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="Add Student" class="btn btn-primary">
    </form>

    <table id="students-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Surname</th>
                <th>Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display students with Bootstrap classes
            $stmt = $db->query("SELECT * FROM students");
            $row_classes = ['table-active', 'table-primary', 'table-secondary', 'table-success', 'table-danger', 'table-warning', 'table-info', 'table-light', 'table-dark'];
            $row_index = 0;

            while ($student = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $row_class = $row_classes[$row_index % count($row_classes)];
                echo "<tr class='{$row_class}'>";
                echo "<td>" . htmlspecialchars($student['id']) . "</td>";
                echo "<td>" . htmlspecialchars($student['name']) . "</td>";
                echo "<td>" . htmlspecialchars($student['surname']) . "</td>";
                echo "<td>" . htmlspecialchars($student['email']) . "</td>";
                echo "<td>" . htmlspecialchars($student['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayStudent(" . $student['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editStudent(" . $student['id'] . ", \"" . $student['name'] . "\", \"" . $student['surname'] . "\", \"" . $student['email'] . "\", \"" . $student['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteStudent(" . $student['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";

                $row_index++;
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Name: ${data.name}\nSurname: ${data.surname}\nEmail: ${data.email}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editStudent(id, name, surname, email, birthday) {
        document.getElementById('name').value = name;
        document.getElementById('surname').value = surname;
        document.getElementById('email').value = email;
        document.getElementById('birthday').value = birthday;
        document.getElementById('student-form').action = 'joint.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('student-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('student-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Student';
    }

    function deleteStudent(id) {
        fetch(`http://localhost/studentss.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'login.php';
    }
</script>

</body>
</html>
.................................................work.php1st, delete and edit not working.................................................................

<?php  
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO employees (fullname, position, workemail, birthday) VALUES (:fullname, :position, :workemail, :birthday)");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Employee added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add employee');</script>";
    }
}

// Handle form submission for updating an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE employees SET fullname = :fullname, position = :position, workemail = :workemail, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Employee updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update employee');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doble G - Employees Info</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('pic.PNG') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 10px; padding: 8px; width: 100%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px #F4FAFC; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }
    </style>
</head>
<body>

<div class="container">
    <h1>Doble G - Employees Info</h1>
    <form id="employee-form" method="POST" action="">
        <input type="text" id="fullname" name="fullname" placeholder="Full Name" required>
        <input type="text" id="position" name="position" placeholder="Position" required>
        <input type="email" id="workemail" name="workemail" placeholder="Work Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="+Add Employee" class="btn btn-primary">
    </form>

    <table id="employees-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Full Name</th>
                <th>Position</th>
                <th>Work Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display employees with Bootstrap classes
            $stmt = $db->query("SELECT * FROM employees");
            $row_classes = ['table-active', 'table-primary', 'table-secondary', 'table-success', 'table-danger', 'table-warning', 'table-info', 'table-light', 'table-dark'];
            $row_index = 0;

            while ($employee = $stmt->fetch(PDO::FETCH_ASSOC)) {
                $row_class = $row_classes[$row_index % count($row_classes)];
                echo "<tr class='{$row_class}'>";
                echo "<td>" . htmlspecialchars($employee['id']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['fullname']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['position']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['workemail']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayEmployee(" . $employee['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editEmployee(" . $employee['id'] . ", \"" . $employee['fullname'] . "\", \"" . $employee['position'] . "\", \"" . $employee['workemail'] . "\", \"" . $employee['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteEmployee(" . $employee['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";

                $row_index++;
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayEmployee(id) {
        fetch(`http://localhost/employeess.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Full Name: ${data.fullname}\nPosition: ${data.position}\nWork Email: ${data.workemail}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editEmployee(id, fullname, position, workemail, birthday) {
        document.getElementById('fullname').value = fullname;
        document.getElementById('position').value = position;
        document.getElementById('workemail').value = workemail;
        document.getElementById('birthday').value = birthday;
        document.getElementById('employee-form').action = 'joint.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('employee-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('employee-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Employee';
    }

    function deleteEmployee(id) {
        fetch(`http://localhost/employees.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'officelogin.php';
    }
</script>

</body>
</html>


......................................................frondend..............................................


<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>GG Company</title>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            margin: 0;
            padding: 0;
        }
        header {
            background: #0073e6;
            color: white;
            padding: 1rem 0;
            position: fixed;
            width: 100%;
            top: 0;
            z-index: 1000;
        }
        header .container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 15px;
        }
        header .logo {
            font-size: 1.5rem;
            font-weight: 700;
        }
        nav ul {
            list-style: none;
            margin: 0;
            padding: 0;
            display: flex;
        }
        nav ul li {
            margin: 0 15px;
        }
        nav ul li a {
            color: white;
            text-decoration: none;
            font-weight: 700;
        }
        nav ul li a:hover {
            text-decoration: underline;
        }
        .hero {
            background: url('https://via.placeholder.com/1920x1080') no-repeat center center/cover;
            color: white;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            text-align: center;
        }
        .hero h1 {
            font-size: 3rem;
            margin-bottom: 1rem;
        }
        .hero p {
            font-size: 1.2rem;
            margin-bottom: 2rem;
        }
        .hero a {
            background: #0073e6;
            color: white;
            padding: 0.8rem 2rem;
            text-decoration: none;
            font-weight: 700;
            border-radius: 5px;
        }
        .hero a:hover {
            background: #005bb5;
        }
        section {
            padding: 3rem 15px;
            max-width: 1200px;
            margin: 0 auto;
        }
        section h2 {
            text-align: center;
            font-size: 2.5rem;
            margin-bottom: 1rem;
        }
        section p {
            text-align: center;
            font-size: 1.1rem;
            margin-bottom: 2rem;
            color: #555;
        }
        .services {
            display: flex;
            justify-content: space-between;
            gap: 1rem;
        }
        .services .service {
            background: #f4f4f9;
            border: 1px solid #ddd;
            border-radius: 8px;
            text-align: center;
            padding: 2rem 1rem;
            flex: 1;
        }
        .services .service img {
            width: 80px;
            height: 80px;
            margin-bottom: 1rem;
        }
        .services .service h3 {
            font-size: 1.5rem;
            margin-bottom: 0.5rem;
        }
        .services .service p {
            color: #666;
        }
        .contact {
            text-align: center;
        }
        .contact a {
            display: inline-block;
            margin-top: 1rem;
            background: #0073e6;
            color: white;
            padding: 0.8rem 2rem;
            text-decoration: none;
            font-weight: 700;
            border-radius: 5px;
        }
        .contact a:hover {
            background: #005bb5;
        }
        footer {
            background: #333;
            color: white;
            text-align: center;
            padding: 1rem 0;
            margin-top: 2rem;
        }
        @media (max-width: 768px) {
            .services {
                flex-direction: column;
                gap: 1.5rem;
            }
            .hero h1 {
                font-size: 2rem;
            }
            .hero p {
                font-size: 1rem;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="logo">GG Company</div>
            <nav>
                <ul>
                    <li><a href="#about">About</a></li>
                    <li><a href="#services">Services</a></li>
                    <li><a href="#contact">Contact</a></li>
                </ul>
            </nav>
        </div>
    </header>

    <div class="hero">
        <div>
            <h1>Welcome to GG Company</h1>
            <p>Your trusted partner for innovation and excellence.</p>
            <a href="#services">Explore Our Services</a>
        </div>
    </div>

    <section id="about">
        <h2>About Us</h2>
        <p>At GG Company, we specialize in delivering top-notch solutions to help businesses grow and succeed. Our team is dedicated to innovation and client satisfaction.</p>
    </section>

    <section id="services">
        <h2>Our Services</h2>
        <div class="services">
            <div class="service">
                <img src="ccc.png" alt="Service 1">
                <h3>Consulting</h3>
                <p>Expert advice to help you navigate complex challenges.</p>
            </div>
            <div class="service">
                <img src="ttt.png" alt="Service 2">
                <h3>Technology</h3>
                <p>Innovative solutions to keep you ahead in the tech space.</p>
            </div>
            <div class="service">
                <img src="mmm.png" alt="Service 3">
                <h3>Marketing</h3>
                <p>Strategies that drive growth and enhance your brand.</p>
            </div>
        </div>
    </section>

    <section id="contact">
        <h2>Contact Us</h2>
        <p>Reach out to us for any inquiries or collaboration opportunities.</p>
        <a href="mailto:info@ggcompany.com">Email Us</a>
    </section>

    <footer>
        &copy; 2024 GG Company. All Rights Reserved.
    </footer>
</body>
</html>
....................................................................work edit and delete not working but appearance changed........


<?php   
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO employees (fullname, position, workemail, birthday) VALUES (:fullname, :position, :workemail, :birthday)");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Employee added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add employee');</script>";
    }
}

// Handle form submission for updating an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE employees SET fullname = :fullname, position = :position, workemail = :workemail, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Employee updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update employee');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doble G - Employees Info</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('pic.PNG') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 100px; padding: 8px; width: 40%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #FF0000; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }

        /* Set row color to lime green */
        .lime-green {
            background-color: limegreen;
            color: white;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Doble G - Employees Info</h1>
    <form id="employee-form" method="POST" action="">
        <input type="text" id="fullname" name="fullname" placeholder="Full Name" required>
        <input type="text" id="position" name="position" placeholder="Position" required>
        <input type="email" id="workemail" name="workemail" placeholder="Work Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <!-- Changed button color to green using Bootstrap's btn-success class -->
        <input type="submit" value="+Add Employee" class="btn btn-success">
    </form>

    <table id="employees-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Full Name</th>
                <th>Position</th>
                <th>Work Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display employees
            $stmt = $db->query("SELECT * FROM employees");
            $row_index = 0;

            while ($employee = $stmt->fetch(PDO::FETCH_ASSOC)) {
                // Apply lime green color to each row
                echo "<tr class='lime-green'>";
                echo "<td>" . htmlspecialchars($employee['id']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['fullname']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['position']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['workemail']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayEmployee(" . $employee['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editEmployee(" . $employee['id'] . ", \"" . $employee['fullname'] . "\", \"" . $employee['position'] . "\", \"" . $employee['workemail'] . "\", \"" . $employee['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteEmployee(" . $employee['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";

                $row_index++;
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayEmployee(id) {
        fetch(`http://localhost/employeess.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Full Name: ${data.fullname}\nPosition: ${data.position}\nWork Email: ${data.workemail}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editEmployee(id, fullname, position, workemail, birthday) {
        document.getElementById('fullname').value = fullname;
        document.getElementById('position').value = position;
        document.getElementById('workemail').value = workemail;
        document.getElementById('birthday').value = birthday;
        document.getElementById('employee-form').action = 'joint.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('employee-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('employee-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Employee';
    }

    function deleteEmployee(id) {
        fetch(`http://localhost/employees.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'Officefrondend.html';
    }
</script>

</body>
</html>

...................................work, delete not working..........

<?php   
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO employees (fullname, position, workemail, birthday) VALUES (:fullname, :position, :workemail, :birthday)");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Employee added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add employee');</script>";
    }
}

// Handle form submission for updating an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE employees SET fullname = :fullname, position = :position, workemail = :workemail, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Employee updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update employee');</script>";
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doble G - Employees Info</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('pic.PNG') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 100px; padding: 8px; width: 40%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #FF0000; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }

        /* Set row color to lime green */
        .lime-green {
            background-color: limegreen;
            color: white;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Doble G - Employees Info</h1>
    <form id="employee-form" method="POST" action="">
        <input type="text" id="fullname" name="fullname" placeholder="Full Name" required>
        <input type="text" id="position" name="position" placeholder="Position" required>
        <input type="email" id="workemail" name="workemail" placeholder="Work Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <!-- Changed button color to green using Bootstrap's btn-success class -->
        <input type="submit" value="+Add Employee" class="btn btn-success">
    </form>

    <table id="employees-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Full Name</th>
                <th>Position</th>
                <th>Work Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display employees
            $stmt = $db->query("SELECT * FROM employees");
            $row_classes = ['table-active', 'table-primary', 'table-secondary', 'table-success', 'table-danger', 'table-warning', 'table-info', 'table-light', 'table-dark'];
            $row_index = 0;

            while ($employee = $stmt->fetch(PDO::FETCH_ASSOC)) {
                // Apply lime green color to each row
                echo "<tr class='lime-green'>";
                echo "<td>" . htmlspecialchars($employee['id']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['fullname']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['position']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['workemail']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayEmployee(" . $employee['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editEmployee(" . $employee['id'] . ", \"" . $employee['fullname'] . "\", \"" . $employee['position'] . "\", \"" . $employee['workemail'] . "\", \"" . $employee['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteEmployee(" . $employee['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";

                $row_index++;
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function displayEmployee(id) {
        fetch(`http://localhost/employeess.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Full Name: ${data.fullname}\nPosition: ${data.position}\nWork Email: ${data.workemail}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editEmployee(id, fullname, position, workemail, birthday) {
        document.getElementById('fullname').value = fullname;
        document.getElementById('position').value = position;
        document.getElementById('workemail').value = workemail;
        document.getElementById('birthday').value = birthday;
        document.getElementById('employee-form').action = 'work.php';
        let input = document.createElement('input');
        input.type = 'hidden';
        input.name = 'id';
        input.value = id;
        document.getElementById('employee-form').appendChild(input);
        let actionInput = document.createElement('input');
        actionInput.type = 'hidden';
        actionInput.name = 'action';
        actionInput.value = 'update';
        document.getElementById('employee-form').appendChild(actionInput);
        document.querySelector('input[type="submit"]').value = 'Update Employee';
    }

    function deleteEmployee(id) {
        fetch(`http://localhost/employees.php?id=${id}`, {
            method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
            console.log('Success:', data);
            location.reload();
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function logout() {
        window.location.href = 'Officefrondend.html';
    }
</script>

</body>
</html>
..................................................................full work code working........................................


<?php   
session_start();

// Database connection
try {
    $db = new PDO('mysql:host=localhost;dbname=website', 'root', 'root');
    $db->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);
} catch (PDOException $e) {
    echo "<tr><td colspan='6'>Error: " . $e->getMessage() . "</td></tr>";
    exit;
}

// Handle form submission for adding an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "add") {
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("INSERT INTO employees (fullname, position, workemail, birthday) VALUES (:fullname, :position, :workemail, :birthday)");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    if ($stmt->execute()) {
        echo "<script>alert('Employee added successfully');</script>";
    } else {
        echo "<script>alert('Failed to add employee');</script>";
    }
}

// Handle form submission for updating an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "update") {
    $id = $_POST["id"];
    $fullname = $_POST["fullname"];
    $position = $_POST["position"];
    $workemail = $_POST["workemail"];
    $birthday = $_POST["birthday"];

    $stmt = $db->prepare("UPDATE employees SET fullname = :fullname, position = :position, workemail = :workemail, birthday = :birthday WHERE id = :id");
    $stmt->bindParam(':fullname', $fullname);
    $stmt->bindParam(':position', $position);
    $stmt->bindParam(':workemail', $workemail);
    $stmt->bindParam(':birthday', $birthday);
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo "<script>alert('Employee updated successfully');</script>";
    } else {
        echo "<script>alert('Failed to update employee');</script>";
    }
}

// Handle DELETE request for deleting an employee
if ($_SERVER["REQUEST_METHOD"] == "POST" && isset($_POST["action"]) && $_POST["action"] == "delete") {
    $id = $_POST["id"];
    $stmt = $db->prepare("DELETE FROM employees WHERE id = :id");
    $stmt->bindParam(':id', $id);
    if ($stmt->execute()) {
        echo json_encode(["success" => true]);
    } else {
        echo json_encode(["success" => false, "message" => "Failed to delete employee"]);
    }
    exit;
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doble G - Employees Info</title>
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background: url('pic.PNG') no-repeat center center fixed;
            background-size: cover;
            font-family: Arial, sans-serif;
        }
        .container {
            background-color: rgba(255, 255, 255, 0.8);
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0px 0px 10px 0px #000;
            margin-top: 50px;
        }
        form { margin-bottom: 20px; }
        input[type="text"], input[type="email"], input[type="date"] { display: block; margin-bottom: 100px; padding: 8px; width: 40%; }
        input[type="submit"], .btn-logout { padding: 8px 16px; }
        table { width: 100%; border-collapse: collapse; }
        th, td { border: 1px solid #FF0000; padding: 8px; text-align: left; }
        i { cursor: pointer; margin-right: 10px; font-size: 1.2em; }

        /* Set row color to lime green */
        .lime-green {
            background-color: limegreen;
            color: white;
        }
    </style>
</head>
<body>

<div class="container">
    <h1>Doble G - Employees Info</h1>
    <form id="employee-form" method="POST" action="">
        <input type="text" id="fullname" name="fullname" placeholder="Full Name" required>
        <input type="text" id="position" name="position" placeholder="Position" required>
        <input type="email" id="workemail" name="workemail" placeholder="Work Email" required>
        <input type="date" id="birthday" name="birthday" required>
        <input type="hidden" name="action" value="add">
        <input type="submit" value="+Add Employee" class="btn btn-success">
    </form>

    <table id="employees-table" class="table table-striped">
        <thead>
            <tr>
                <th>ID</th>
                <th>Full Name</th>
                <th>Position</th>
                <th>Work Email</th>
                <th>Birthday</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <?php
            // Fetch and display employees
            $stmt = $db->query("SELECT * FROM employees");
            while ($employee = $stmt->fetch(PDO::FETCH_ASSOC)) {
                echo "<tr class='lime-green'>";
                echo "<td>" . htmlspecialchars($employee['id']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['fullname']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['position']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['workemail']) . "</td>";
                echo "<td>" . htmlspecialchars($employee['birthday']) . "</td>";
                echo "<td>
                        <i class='fas fa-eye text-info' onclick='displayEmployee(" . $employee['id'] . ")' title='View'></i>
                        <i class='fas fa-pen text-warning' onclick='editEmployee(" . $employee['id'] . ", \"" . $employee['fullname'] . "\", \"" . $employee['position'] . "\", \"" . $employee['workemail'] . "\", \"" . $employee['birthday'] . "\")' title='Edit'></i>
                        <i class='fas fa-trash text-danger' onclick='deleteEmployee(" . $employee['id'] . ")' title='Delete'></i>
                      </td>";
                echo "</tr>";
            }
            ?>
        </tbody>
    </table>
    <button class="btn btn-secondary btn-logout" onclick="logout()">Logout</button>
</div>

<script>
    function deleteEmployee(id) {
        const formData = new FormData();
        formData.append('action', 'delete');
        formData.append('id', id);

        fetch('', {
            method: 'POST',
            body: formData,
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                location.reload();
            } else {
                alert(data.message || 'Failed to delete employee');
            }
        })
        .catch((error) => {
            console.error('Error:', error);
        });
    }

    function displayEmployee(id) {
        fetch(`http://localhost/employeess.php?id=${id}`)
            .then(response => response.json())
            .then(data => {
                alert(`Full Name: ${data.fullname}\nPosition: ${data.position}\nWork Email: ${data.workemail}\nBirthday: ${data.birthday}`);
            })
            .catch((error) => {
                console.error('Error:', error);
            });
    }

    function editEmployee(id, fullname, position, workemail, birthday) {
        document.getElementById('fullname').value = fullname;
        document.getElementById('position').value = position;
        document.getElementById('workemail').value = workemail;
        document.getElementById('birthday').value = birthday;
        document.getElementById('employee-form').action = '';
        let inputId = document.createElement('input');
        inputId.type = 'hidden';
        inputId.name = 'id';
        inputId.value = id;
        document.getElementById('employee-form').appendChild(inputId);
        document.querySelector('input[name="action"]').value = 'update';
        document.querySelector('input[type="submit"]').value = 'Update Employee';
    }

    function logout() {
        window.location.href = 'Officefrondend.html';
    }
</script>

</body>
</html>
